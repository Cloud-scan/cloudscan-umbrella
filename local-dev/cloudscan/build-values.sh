#!/usr/bin/env bash

set -xv
set -euo pipefail

# Load deployment variables
source ../deployment-variables.sh

VALUES_FILE="generated-values.yaml"

cat > "$VALUES_FILE" <<EOF
global:
  imagePullPolicy: Always
  storageClass: standard

postgresql:
  enabled: false  # Using external PostgreSQL
  external:
    host: ${POSTGRES_RELEASE_NAME}-postgresql.${POSTGRES_NAMESPACE}.svc.cluster.local
    port: 5432
    user: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    database: ${POSTGRES_DATABASE}

redis:
  enabled: ${REDIS_ENABLED}
  image:
    registry: docker.io
    repository: bitnami/redis
    tag: latest
  auth:
    enabled: true
    password: ${REDIS_PASSWORD}
  tls:
    enabled: true
    autoGenerated: true
    certFilename: "tls.crt"
    certKeyFilename: "tls.key"
    certCAFilename: "ca.crt"
    authClients: false
  master:
    persistence:
      enabled: false

orchestrator:
  enabled: ${CLOUDSCAN_ORCHESTRATOR_ENABLED}
  image:
    registry: ${DOCKER_REGISTRY}
    repository: cloudscan-orchestrator
    pullPolicy: Always
  replicaCount: 1
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

apiGateway:
  enabled: ${CLOUDSCAN_API_GATEWAY_ENABLED}
  image:
    registry: ${DOCKER_REGISTRY}
    repository: cloudscan-api-gateway
    pullPolicy: Always
  replicaCount: 1
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

storage:
  enabled: ${CLOUDSCAN_STORAGE_ENABLED}
  image:
    registry: ${DOCKER_REGISTRY}
    repository: cloudscan-storage
    pullPolicy: Always
  replicaCount: 1
  storageType: ${STORAGE_TYPE}
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

websocket:
  enabled: ${CLOUDSCAN_WEBSOCKET_ENABLED}
  image:
    registry: ${DOCKER_REGISTRY}
    repository: cloudscan-websocket
    pullPolicy: Always
  replicaCount: 1
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

ui:
  enabled: ${CLOUDSCAN_UI_ENABLED}
  image:
    registry: ${DOCKER_REGISTRY}
    repository: cloudscan-ui
    pullPolicy: Always
  replicaCount: 1
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"

runner:
  enabled: ${CLOUDSCAN_RUNNER_ENABLED}
  image:
    registry: ${DOCKER_REGISTRY}
    repository: cloudscan-runner
    pullPolicy: Always

ingress:
  enabled: ${CLOUDSCAN_INGRESS_ENABLED}
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: ${CLOUDSCAN_INGRESS_HOST}
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: cloudscan-ui
              port: 3000
        - path: /api
          pathType: Prefix
          backend:
            service:
              name: cloudscan-api-gateway
              port: 8080
        - path: /ws
          pathType: Prefix
          backend:
            service:
              name: cloudscan-websocket
              port: 9090
  tls:
    - secretName: cloudscan-tls
      hosts:
        - ${CLOUDSCAN_INGRESS_HOST}
EOF

echo "Values file generated at: $VALUES_FILE"
cat "$VALUES_FILE"